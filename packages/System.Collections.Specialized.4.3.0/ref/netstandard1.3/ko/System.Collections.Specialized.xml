<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Collections.Specialized</name>
  </assembly>
  <members>
    <member name="T:System.Collections.Specialized.BitVector32">
      <summary>32비트 메모리에 부울 값과 small 정수를 저장하는 간단한 구조를 제공합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)">
      <summary>기존의 <see cref="T:System.Collections.Specialized.BitVector32" /> 구조로 표현되는 데이터가 포함되어 있는 <see cref="T:System.Collections.Specialized.BitVector32" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="value">복사할 데이터가 포함되어 있는 <see cref="T:System.Collections.Specialized.BitVector32" /> 구조입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)">
      <summary>정수로 표현되는 데이터가 포함되어 있는 <see cref="T:System.Collections.Specialized.BitVector32" /> 구조체의 새 인스턴스를 초기화합니다.</summary>
      <param name="data">새 <see cref="T:System.Collections.Specialized.BitVector32" />의 데이터를 나타내는 정수입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateMask">
      <summary>비트 플래그로 설정된 <see cref="T:System.Collections.Specialized.BitVector32" />에서 개별 비트를 검색하는 데 사용할 수 있는 일련의 마스크 중의 첫 번째 마스크를 만듭니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.BitVector32" />에서 첫 번째 비트 플래그를 격리하는 마스크입니다.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)">
      <summary>비트 플래그로 설정된 <see cref="T:System.Collections.Specialized.BitVector32" />에서 개별 비트를 검색하는 데 사용할 수 있는 일련의 마스크 중에서 지정된 마스크 다음에 마스크를 추가로 만듭니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.BitVector32" />에서 <paramref name="previous" />가 가리키는 마스크 다음의 비트 플래그를 격리하는 마스크입니다.</returns>
      <param name="previous">이전 비트 플래그를 나타내는 마스크입니다. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="previous" /> indicates the last bit flag in the <see cref="T:System.Collections.Specialized.BitVector32" />. </exception>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)">
      <summary>small 정수가 포함되어 있는 일련의 섹션에 첫 번째 <see cref="T:System.Collections.Specialized.BitVector32.Section" />을 만듭니다.</summary>
      <returns>0부터 <paramref name="maxValue" /> 범위의 숫자를 보유할 수 있는 <see cref="T:System.Collections.Specialized.BitVector32.Section" />입니다.</returns>
      <param name="maxValue">새 <see cref="T:System.Collections.Specialized.BitVector32.Section" />의 최대값을 지정하는 16비트의 부호 있는 정수입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="maxValue" /> is less than 1. </exception>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)">
      <summary>small 정수가 포함되어 있는 일련의 섹션에서 지정된 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 다음에 새 <see cref="T:System.Collections.Specialized.BitVector32.Section" />을 만듭니다.</summary>
      <returns>0부터 <paramref name="maxValue" /> 범위의 숫자를 보유할 수 있는 <see cref="T:System.Collections.Specialized.BitVector32.Section" />입니다.</returns>
      <param name="maxValue">새 <see cref="T:System.Collections.Specialized.BitVector32.Section" />의 최대값을 지정하는 16비트의 부호 있는 정수입니다. </param>
      <param name="previous">
        <see cref="T:System.Collections.Specialized.BitVector32" />에서 이전의 <see cref="T:System.Collections.Specialized.BitVector32.Section" />입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="maxValue" /> is less than 1. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="previous" /> includes the final bit in the <see cref="T:System.Collections.Specialized.BitVector32" />.-or- <paramref name="maxValue" /> is greater than the highest value that can be represented by the number of bits after <paramref name="previous" />. </exception>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Data">
      <summary>
        <see cref="T:System.Collections.Specialized.BitVector32" />의 값을 정수로 가져옵니다.</summary>
      <returns>정수인 <see cref="T:System.Collections.Specialized.BitVector32" />의 값입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Equals(System.Object)">
      <summary>지정된 개체가 <see cref="T:System.Collections.Specialized.BitVector32" />와 같은지를 확인합니다.</summary>
      <returns>지정된 개체가 <see cref="T:System.Collections.Specialized.BitVector32" />와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="o">현재 <see cref="T:System.Collections.Specialized.BitVector32" />와 비교할 개체입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.GetHashCode">
      <summary>
        <see cref="T:System.Collections.Specialized.BitVector32" />에 대한 해시 함수로 작용합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.BitVector32" />의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)">
      <summary>지정된 <see cref="T:System.Collections.Specialized.BitVector32.Section" />에 저장된 값을 가져오거나 설정합니다.</summary>
      <returns>지정된 <see cref="T:System.Collections.Specialized.BitVector32.Section" />에 저장된 값입니다.</returns>
      <param name="section">가져오거나 설정할 값이 포함되어 있는 <see cref="T:System.Collections.Specialized.BitVector32.Section" />입니다. </param>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Item(System.Int32)">
      <summary>지정된 마스크가 나타내는 비트 플래그의 상태를 가져오거나 설정합니다.</summary>
      <returns>지정된 비트 플래그가 (1)에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="bit">가져오거나 설정할 비트를 나타내는 마스크입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.ToString">
      <summary>현재 <see cref="T:System.Collections.Specialized.BitVector32" />를 나타내는 문자열을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Collections.Specialized.BitVector32" />를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)">
      <summary>지정된 <see cref="T:System.Collections.Specialized.BitVector32" />를 나타내는 문자열을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Collections.Specialized.BitVector32" />를 나타내는 문자열입니다.</returns>
      <param name="value">나타낼 <see cref="T:System.Collections.Specialized.BitVector32" />입니다. </param>
    </member>
    <member name="T:System.Collections.Specialized.BitVector32.Section">
      <summary>정수를 포함할 수 있는 벡터의 섹션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Collections.Specialized.BitVector32.Section)">
      <summary>지정된 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체가 현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체와 같은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="obj" /> 매개 변수가 현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="obj">현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체와 비교할 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)">
      <summary>지정된 개체가 현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체와 같은지 여부를 확인합니다.</summary>
      <returns>지정된 개체가 현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체와 같으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="o">현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" />와 비교할 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.GetHashCode">
      <summary>해시 알고리즘과 해시 테이블 같은 데이터 구조에 적합한 현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" />에 대한 해시 함수의 역할을 합니다.</summary>
      <returns>현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" />의 해시 코드입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Section.Mask">
      <summary>
        <see cref="T:System.Collections.Specialized.BitVector32" />에서 이 섹션을 분리하는 마스크를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.BitVector32" />에서 이 섹션을 분리하는 마스크입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.BitVector32.Section.Offset">
      <summary>
        <see cref="T:System.Collections.Specialized.BitVector32" />의 시작 부분을 기준으로 하는 이 섹션의 오프셋을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.BitVector32" />의 시작 부분을 기준으로 하는 이 섹션의 오프셋입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.op_Equality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)">
      <summary>지정된 두 가지 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체가 같은지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="a" /> 및 <paramref name="b" /> 매개 변수가 같은 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체를 나타내면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">
        <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체</param>
      <param name="b">
        <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.op_Inequality(System.Collections.Specialized.BitVector32.Section,System.Collections.Specialized.BitVector32.Section)">
      <summary>두 가지 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체의 값이 다른지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="a" /> 및 <paramref name="b" /> 매개 변수가 다른 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체를 나타내면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="a">
        <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체</param>
      <param name="b">
        <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 개체</param>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.ToString">
      <summary>현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" />를 나타내는 문자열을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Collections.Specialized.BitVector32.Section" />를 나타내는 문자열입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)">
      <summary>지정된 <see cref="T:System.Collections.Specialized.BitVector32.Section" />을 나타내는 문자열을 반환합니다.</summary>
      <returns>지정된 <see cref="T:System.Collections.Specialized.BitVector32.Section" />을 나타내는 문자열입니다.</returns>
      <param name="value">나타낼 <see cref="T:System.Collections.Specialized.BitVector32.Section" />입니다.</param>
    </member>
    <member name="T:System.Collections.Specialized.HybridDictionary">
      <summary>컬렉션이 작을 때는 <see cref="T:System.Collections.Specialized.ListDictionary" />를 사용하여 IDictionary를 구현한 다음 컬렉션이 커지면 <see cref="T:System.Collections.Hashtable" />로 전환합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor">
      <summary>대/소문자를 구분하는 빈 <see cref="T:System.Collections.Specialized.HybridDictionary" />를 만듭니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)">
      <summary>대/소문자 구분이 지정된 빈 <see cref="T:System.Collections.Specialized.HybridDictionary" />를 만듭니다.</summary>
      <param name="caseInsensitive">
        <see cref="T:System.Collections.Specialized.HybridDictionary" />가 대/소문자를 구분하는지 여부를 나타내는 부울입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)">
      <summary>처음 크기가 지정된 대/소문자를 구분하는 <see cref="T:System.Collections.Specialized.HybridDictionary" />를 만듭니다.</summary>
      <param name="initialSize">
        <see cref="T:System.Collections.Specialized.HybridDictionary" />가 처음에 포함할 수 있는 대략적인 엔트리 수입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)">
      <summary>처음 크기와 대/소문자 구분 여부가 지정된 <see cref="T:System.Collections.Specialized.HybridDictionary" />를 만듭니다.</summary>
      <param name="initialSize">
        <see cref="T:System.Collections.Specialized.HybridDictionary" />가 처음에 포함할 수 있는 대략적인 엔트리 수입니다. </param>
      <param name="caseInsensitive">
        <see cref="T:System.Collections.Specialized.HybridDictionary" />가 대/소문자를 구분하는지 여부를 나타내는 부울입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)">
      <summary>지정한 키와 값을 가지는 엔트리를 <see cref="T:System.Collections.Specialized.HybridDictionary" />에 추가합니다.</summary>
      <param name="key">추가할 엔트리의 키입니다. </param>
      <param name="value">추가할 엔트리의 값입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">같은 키를 가지는 엔트리가 이미 <see cref="T:System.Collections.Specialized.HybridDictionary" />에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Clear">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에서 모든 엔트리를 제거합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에 특정 키가 들어 있는지 여부를 확인합니다.</summary>
      <returns>true if the <see cref="T:System.Collections.Specialized.HybridDictionary" /> contains an entry with the specified key; otherwise, false.</returns>
      <param name="key">
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에서 찾을 수 있는 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)">
      <summary>지정한 인덱스에서 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 엔트리를 1차원 <see cref="T:System.Array" /> 인스턴스에 복사합니다.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Specialized.HybridDictionary" />.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는 소스 <see cref="T:System.Collections.Specialized.HybridDictionary" />의 요소 수가 <paramref name="arrayIndex" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우 </exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.HybridDictionary" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.Count">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에 포함된 키/값 쌍의 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에 포함된 키/값 쌍의 수입니다.이 속성 값을 검색하는 것은 O(1) 연산입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에 대한 <see cref="T:System.Collections.IDictionaryEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.IsFixedSize">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)">
      <summary>지정된 키에 연결된 값을 가져오거나 설정합니다.</summary>
      <returns>지정한 키와 연결된 값입니다.지정한 키가 없는 경우 해당 키를 가져오려고 시도하면 null이 반환되고 해당 키를 설정하려고 시도하면 지정한 키를 사용하여 새 엔트리가 만들어집니다.</returns>
      <param name="key">가져오거나 설정할 값이 있는 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</returns>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에서 지정한 키를 가지는 엔트리를 제거합니다.</summary>
      <param name="key">제거할 엔트리의 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.SyncRoot">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />를 반복하는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.HybridDictionary.Values">
      <summary>
        <see cref="T:System.Collections.Specialized.HybridDictionary" />의 값을 포함하는 <see cref="T:System.Collections.ICollection" />을 가져옵니다.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Specialized.HybridDictionary" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.IOrderedDictionary">
      <summary>키/값 쌍의 인덱싱된 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션을 반복하는 열거자를 반환합니다.</summary>
      <returns>전체 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션의 <see cref="T:System.Collections.IDictionaryEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
      <summary>컬렉션의 지정된 인덱스에 키/값 쌍을 삽입합니다.</summary>
      <param name="index">키/값 쌍이 삽입될 0부터 시작하는 인덱스입니다.</param>
      <param name="key">추가할 요소의 키로 사용할 개체입니다.</param>
      <param name="value">추가할 요소의 값으로 사용할 개체입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작습니다.또는<paramref name="index" />가 <see cref="P:System.Collections.ICollection.Count" />보다 큰 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentException">키가 같은 요소가 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션에 이미 있는 경우</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션이 읽기 전용인 경우또는<see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션의 크기가 고정되어 있는 경우</exception>
    </member>
    <member name="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
      <summary>지정한 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정한 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작습니다.또는 <paramref name="index" />가 <see cref="P:System.Collections.ICollection.Count" />보다 크거나 같은 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 제거합니다.</summary>
      <param name="index">제거할 요소의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작습니다.또는 <paramref name="index" />가 <see cref="P:System.Collections.ICollection.Count" />보다 크거나 같은 경우 </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션이 읽기 전용인 경우또는 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 컬렉션의 크기가 고정되어 있는 경우 </exception>
    </member>
    <member name="T:System.Collections.Specialized.ListDictionary">
      <summary>단일 연결 목록을 사용하여 IDictionary를 구현합니다.일반적으로 10개 미만의 항목이 포함된 컬렉션에 사용하는 것이 좋습니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.#ctor">
      <summary>기본 비교자를 사용하여 빈 <see cref="T:System.Collections.Specialized.ListDictionary" />를 만듭니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.#ctor(System.Collections.IComparer)">
      <summary>지정된 비교자를 사용하여 빈 <see cref="T:System.Collections.Specialized.ListDictionary" />를 만듭니다.</summary>
      <param name="comparer">두 키가 같은지 여부를 확인하는 데 사용하는 <see cref="T:System.Collections.IComparer" />입니다.또는 각 키로 <see cref="M:System.Object.Equals(System.Object)" />를 구현한 기본 비교자를 사용하면 null입니다. </param>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
      <summary>지정한 키와 값을 가지는 엔트리를 <see cref="T:System.Collections.Specialized.ListDictionary" />에 추가합니다.</summary>
      <param name="key">추가할 엔트리의 키입니다. </param>
      <param name="value">추가할 엔트리의 값입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">같은 키를 가지는 엔트리가 이미 <see cref="T:System.Collections.Specialized.ListDictionary" />에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.Clear">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에서 모든 엔트리를 제거합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에 특정 키가 들어 있는지 여부를 확인합니다.</summary>
      <returns>true if the <see cref="T:System.Collections.Specialized.ListDictionary" /> contains an entry with the specified key; otherwise, false.</returns>
      <param name="key">
        <see cref="T:System.Collections.Specialized.ListDictionary" />에서 찾을 수 있는 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
      <summary>지정한 인덱스에서 <see cref="T:System.Collections.Specialized.ListDictionary" /> 엔트리를 1차원 <see cref="T:System.Array" /> 인스턴스에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Specialized.ListDictionary" />에서 복사한 <see cref="T:System.Collections.DictionaryEntry" /> 개체의 대상인 1차원 <see cref="T:System.Array" /> 배열입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는 소스 <see cref="T:System.Collections.Specialized.ListDictionary" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우 </exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.ListDictionary" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.Count">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에 포함된 키/값 쌍의 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에 포함된 키/값 쌍의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />를 반복하는 <see cref="T:System.Collections.IDictionaryEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에 대한 <see cref="T:System.Collections.IDictionaryEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.IsFixedSize">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
      <summary>지정된 키에 연결된 값을 가져오거나 설정합니다.</summary>
      <returns>지정한 키와 연결된 값입니다.지정한 키가 없는 경우 해당 키를 가져오려고 시도하면 null이 반환되고 해당 키를 설정하려고 시도하면 지정한 키를 사용하여 새 엔트리가 만들어집니다.</returns>
      <param name="key">가져오거나 설정할 값이 있는 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.Keys">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />의 키를 포함하는 <see cref="T:System.Collections.ICollection" />을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.ListDictionary" />의 키를 포함하는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에서 지정한 키를 가지는 엔트리를 제거합니다.</summary>
      <param name="key">제거할 엔트리의 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.SyncRoot">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />를 반복하는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.ListDictionary" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.ListDictionary.Values">
      <summary>
        <see cref="T:System.Collections.Specialized.ListDictionary" />의 값을 포함하는 <see cref="T:System.Collections.ICollection" />을 가져옵니다.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Specialized.ListDictionary" />.</returns>
    </member>
    <member name="T:System.Collections.Specialized.NameObjectCollectionBase">
      <summary>키나 인덱스를 사용하여 액세스할 수 있는 연결된 <see cref="T:System.String" /> 키와 <see cref="T:System.Object" /> 값의 컬렉션에 대한 abstract 기본 클래스를 제공합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor">
      <summary>비어 있는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)">
      <summary>기본 초기 용량을 갖고 있고 지정된 <see cref="T:System.Collections.IEqualityComparer" /> 개체를 사용하는 비어 있는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="equalityComparer">두 키가 같은지 여부를 확인하고 컬렉션의 키에 대한 해시 코드를 생성하는 데 사용할 <see cref="T:System.Collections.IEqualityComparer" /> 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)">
      <summary>지정된 초기 용량을 갖고 있고 기본 해시 코드 공급자와 기본 비교자를 사용하는 비어 있는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스가 처음에 포함할 수 있는 대략적인 엔트리 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <summary>지정된 초기 용량을 갖고 있고 지정된 <see cref="T:System.Collections.IEqualityComparer" /> 개체를 사용하는 비어 있는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 개체가 처음에 포함할 수 있는 대략적인 엔트리 수입니다.</param>
      <param name="equalityComparer">두 키가 같은지 여부를 확인하고 컬렉션의 키에 대한 해시 코드를 생성하는 데 사용할 <see cref="T:System.Collections.IEqualityComparer" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)">
      <summary>지정한 키와 값을 가지는 엔트리를 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 추가합니다.</summary>
      <param name="name">추가할 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
      <param name="value">추가할 엔트리의 <see cref="T:System.Object" /> 값입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다. </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseClear">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에서 모든 엔트리를 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 지정한 인덱스에서 엔트리의 값을 가져옵니다.</summary>
      <returns>지정한 인덱스에 있는 엔트리 값을 나타내는 <see cref="T:System.Object" />입니다.</returns>
      <param name="index">가져올 값의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에서 지정한 키를 갖는 첫 번째 엔트리 값을 가져옵니다.</summary>
      <returns>있는 경우 지정한 키가 있는 첫 번째 엔트리 값을 나타내는 <see cref="T:System.Object" />이고, 그러지 않으면 null입니다.</returns>
      <param name="name">가져올 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 모든 키를 포함하는 <see cref="T:System.String" /> 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 모든 키를 포함하는 <see cref="T:System.String" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 모든 값을 포함하는 <see cref="T:System.Object" /> 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 모든 값을 포함하는 <see cref="T:System.Object" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 모든 값을 포함하는 지정한 형식의 배열을 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 모든 값을 포함하는 지정한 형식의 배열입니다.</returns>
      <param name="type">반환할 배열의 형식을 나타내는 <see cref="T:System.Type" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" />가 null인 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" />이 잘못된 <see cref="T:System.Type" />인 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 지정한 인덱스에서 엔트리의 키를 가져옵니다.</summary>
      <returns>지정한 인덱스에 있는 엔트리의 키를 나타내는 <see cref="T:System.String" />입니다.</returns>
      <param name="index">가져올 키의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 null이 아닌 키를 갖는 엔트리가 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 null이 아닌 키가 있는 엔트리가 포함되어 있으면 true이고, 그러지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에서 지정한 키를 가지는 엔트리를 제거합니다.</summary>
      <param name="name">제거할 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다. </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 지정한 인덱스에서 엔트리를 제거합니다.</summary>
      <param name="index">제거할 엔트리의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우</exception>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 지정한 인덱스에서 엔트리의 값을 설정합니다.</summary>
      <param name="index">설정할 엔트리의 0부터 시작하는 인덱스입니다.</param>
      <param name="value">설정할 엔트리의 새 값을 나타내는 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)">
      <summary>지정한 키를 갖는 엔트리가 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 있으면 첫 번째 엔트리의 값을 설정하고, 그러지 않으면 지정한 키와 값을 갖는 엔트리를 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 추가합니다.</summary>
      <param name="name">설정할 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
      <param name="value">설정할 엔트리의 새 값을 나타내는 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다. </exception>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 포함된 키/값 쌍의 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 포함된 키/값 쌍의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />를 반복하는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스가 읽기 전용인지 여부를 나타내는 값을 가져오거나 설정합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스가 읽기 전용이면 true이고, 그러지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 키를 모두 포함하는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 인스턴스를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스의 키를 모두 포함하는 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 인스턴스입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는소스 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그러지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection">
      <summary>컬렉션의 <see cref="T:System.String" /> 키의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />의 키 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />에 있는 키의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Get(System.Int32)">
      <summary>컬렉션의 지정한 인덱스에서 키를 가져옵니다.</summary>
      <returns>컬렉션의 지정된 인덱스에 있는 키가 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <param name="index">컬렉션에서 가져올 키의 0부터 시작하는 인덱스입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />을 반복하는 열거자를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Item(System.Int32)">
      <summary>컬렉션의 지정된 인덱스에 있는 엔트리를 가져옵니다.</summary>
      <returns>컬렉션의 지정한 인덱스에 있는 엔트리의 <see cref="T:System.String" /> 키입니다.</returns>
      <param name="index">컬렉션에 있는 엔트리의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는 소스 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우 </exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="T:System.Collections.Specialized.NameValueCollection">
      <summary>키나 인덱스를 사용하여 액세스할 수 있는 연결된 <see cref="T:System.String" /> 키와 <see cref="T:System.String" /> 값의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.#ctor">
      <summary>비어 있는 상태이고 기본 초기 용량을 가지며 대/소문자를 구분하지 않는 기본 해시 코드 공급자와 대/소문자를 구분하지 않는 기본 비교자를 사용하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.IEqualityComparer)">
      <summary>기본 초기 용량을 갖고 있고 지정된 <see cref="T:System.Collections.IEqualityComparer" /> 개체를 사용하는 비어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="equalityComparer">두 키가 같은지 여부를 확인하고 컬렉션의 키에 대한 해시 코드를 생성하는 데 사용할 <see cref="T:System.Collections.IEqualityComparer" /> 개체입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 엔트리를 초기 용량이 복사되는 엔트리의 수와 같고 소스 컬렉션과 같은 해시 코드 공급자 및 같은 비교자를 사용하는 새 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 복사합니다.</summary>
      <param name="col">새 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사할 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32)">
      <summary>비어 있는 상태이고 지정한 초기 용량을 가지며 대/소문자를 구분하지 않는 기본 해시 코드 공급자와 대/소문자를 구분하지 않는 기본 비교자를 사용하는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에 포함될 수 있는 초기 엔트리 수입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <summary>지정된 초기 용량을 갖고 있고 지정된 <see cref="T:System.Collections.IEqualityComparer" /> 개체를 사용하는 비어 있는 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Specialized.NameValueCollection" /> 개체에 포함될 수 있는 초기 엔트리 수입니다.</param>
      <param name="equalityComparer">두 키가 같은지 여부를 확인하고 컬렉션의 키에 대한 해시 코드를 생성하는 데 사용할 <see cref="T:System.Collections.IEqualityComparer" /> 개체입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
      <summary>지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 엔트리를 새 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 복사합니다. 이 컬렉션은 지정된 초기 용량을 가지거나 복사되는 엔트리의 수와 같은 초기 용량을 가지며 대/소문자를 구분하지 않는 기본 해시 코드 공급자와 대/소문자를 구분하지 않는 기본 비교자를 사용합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에 포함될 수 있는 초기 엔트리 수입니다.</param>
      <param name="col">새 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사할 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="col" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
      <summary>지정된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 엔트리를 현재 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사합니다.</summary>
      <param name="c">현재 <see cref="T:System.Collections.Specialized.NameValueCollection" />으로 복사할 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="c" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
      <summary>지정된 이름과 값을 가지는 엔트리를 <see cref="T:System.Collections.Specialized.NameValueCollection" />에 추가합니다.</summary>
      <param name="name">추가할 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
      <param name="value">추가할 엔트리의 <see cref="T:System.String" /> 값입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다. </exception>
    </member>
    <member name="P:System.Collections.Specialized.NameValueCollection.AllKeys">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 모든 키를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 모든 키를 포함하는 <see cref="T:System.String" /> 배열입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.Clear">
      <summary>캐시된 배열을 무효로 만들고 <see cref="T:System.Collections.Specialized.NameValueCollection" />에서 모든 엔트리를 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.NameValueCollection" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="dest">
        <see cref="T:System.Array" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Collections.Specialized.NameValueCollection" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="dest" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dest" />가 null인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dest" />가 다차원 배열인 경우또는 소스 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="dest" /> 끝까지 사용 가능한 공간보다 큰 경우</exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 형식을 대상 <paramref name="dest" /> 형식으로 자동 캐스팅할 수 없는 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.Get(System.Int32)">
      <summary>하나의 쉼표로 구분된 목록에 결합된 <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에서 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에 있는 값의 쉼표로 구분된 목록이 들어 있는 <see cref="T:System.String" />이거나, 없는 경우 null입니다.</returns>
      <param name="index">컬렉션에서 가져올 값이 들어 있는 엔트리의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.Get(System.String)">
      <summary>하나의 쉼표로 구분된 목록에 결합된 <see cref="T:System.Collections.Specialized.NameValueCollection" />에서 지정된 키와 관련된 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에서 지정된 키와 관련된 값의 쉼표로 구분된 목록이 들어 있는 <see cref="T:System.String" />이거나, 없는 경우 null입니다.</returns>
      <param name="name">가져올 값이 들어 있는 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.GetKey(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정한 인덱스에서 키를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에 있는 키가 들어 있는 <see cref="T:System.String" />이거나, 없는 경우 null입니다.</returns>
      <param name="index">컬렉션에서 가져올 키의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에서 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에 있는 값이 들어 있는 <see cref="T:System.String" /> 배열이거나, 해당 배열이 없는 경우 null입니다.</returns>
      <param name="index">컬렉션에서 가져올 값이 들어 있는 엔트리의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에서 지정된 키와 관련된 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 키와 관련된 값이 들어 있는 <see cref="T:System.String" /> 배열이거나, 없는 경우 null입니다.</returns>
      <param name="name">가져올 값이 들어 있는 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.HasKeys">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에 null이 아닌 키가 들어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에 null이 아닌 키가 들어 있으면 true이고, 그러지 않으면 false입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays">
      <summary>컬렉션의 캐시된 배열을 null로 다시 설정합니다.</summary>
    </member>
    <member name="P:System.Collections.Specialized.NameValueCollection.Item(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />의 지정된 인덱스에 있는 엔트리를 가져옵니다.</summary>
      <returns>컬렉션의 지정된 인덱스에 있는 값의 쉼표로 구분된 목록이 들어 있는 <see cref="T:System.String" />입니다.</returns>
      <param name="index">컬렉션에 있는 엔트리의 인덱스(0부터 시작)입니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 컬렉션의 유효한 인덱스 범위 밖에 있는 경우</exception>
    </member>
    <member name="P:System.Collections.Specialized.NameValueCollection.Item(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에서 지정된 키를 가지는 엔트리를 가져오거나 설정합니다.</summary>
      <returns>지정된 키와 연결된 값이 있으면 쉼표로 구분된 해당 값의 목록이 포함된 <see cref="T:System.String" />이고, 그러지 않으면 null입니다.</returns>
      <param name="name">찾을 항목의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">읽기 전용 컬렉션을 수정하려고 시도한 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.Remove(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> 인스턴스에서 지정한 키를 가지는 엔트리를 제거합니다.</summary>
      <param name="name">제거할 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.NameValueCollection" />에 엔트리의 값을 설정합니다.</summary>
      <param name="name">새 값을 추가할 엔트리의 <see cref="T:System.String" /> 키입니다.키는 null이 될 수 있습니다.</param>
      <param name="value">지정된 엔트리에 추가할 새 값을 나타내는 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">컬렉션이 읽기 전용입니다.</exception>
    </member>
    <member name="T:System.Collections.Specialized.OrderedDictionary">
      <summary>키나 인덱스에서 액세스할 수 있는 키/값 쌍의 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.#ctor">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.IEqualityComparer)">
      <summary>지정한 비교자를 사용하여 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="comparer">두 키가 같은지 여부를 확인하는 데 사용하는 <see cref="T:System.Collections.IComparer" />입니다.또는 각 키로 <see cref="M:System.Object.Equals(System.Object)" />를 구현한 기본 비교자를 사용하면 null입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32)">
      <summary>지정한 초기 용량을 사용하여 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 포함될 수 있는 초기 요소 수입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Int32,System.Collections.IEqualityComparer)">
      <summary>지정한 초기 용량과 비교자를 사용하여 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
      <param name="capacity">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 포함될 수 있는 초기 요소 수입니다.</param>
      <param name="comparer">두 키가 같은지 여부를 확인하는 데 사용하는 <see cref="T:System.Collections.IComparer" />입니다.또는 각 키로 <see cref="M:System.Object.Equals(System.Object)" />를 구현한 기본 비교자를 사용하면 null입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)">
      <summary>지정한 키와 값이 있는 엔트리를 사용할 수 있는 가장 낮은 인덱스를 사용하여 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 추가합니다.</summary>
      <param name="key">추가할 엔트리의 키입니다.</param>
      <param name="value">추가할 엔트리의 값입니다.이 값은 null일 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.AsReadOnly">
      <summary>현재 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션의 읽기 전용 복사본을 반환합니다.</summary>
      <returns>현재 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션의 읽기 전용 복사본입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.Clear">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에서 모든 요소를 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용인 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.Contains(System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 특정 키가 들어 있는지 여부를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 지정한 키가 있는 요소가 포함된 경우 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에서 찾을 키입니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)">
      <summary>지정한 인덱스에 있는 1차원 <see cref="T:System.Array" /> 개체에 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 요소를 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에서 복사한 <see cref="T:System.Collections.DictionaryEntry" /> 개체의 대상인 1차원 <see cref="T:System.Array" /> 개체입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다.</param>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.Count">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 포함된 키/값 쌍의 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 포함된 키/값 쌍의 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션을 반복하는 <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 대한 <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
      <summary>지정한 인덱스에 있는 지정한 키와 값을 사용하여 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 새 엔트리를 삽입합니다.</summary>
      <param name="index">요소를 삽입해야 하는 0부터 시작하는 인덱스입니다.</param>
      <param name="key">추가할 엔트리의 키입니다.</param>
      <param name="value">추가할 엔트리의 값입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />이 범위에서 벗어난 경우.</exception>
      <exception cref="T:System.NotSupportedException">이 컬렉션은 읽기 전용입니다.</exception>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용이면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.Item(System.Int32)">
      <summary>지정한 인덱스에 있는 값을 가져오거나 설정합니다.</summary>
      <returns>지정한 인덱스에 있는 항목의 값입니다. </returns>
      <param name="index">가져오거나 설정할 값의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있으며 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.Specialized.OrderedDictionary.Count" />보다 크거나 같은 경우</exception>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.Item(System.Object)">
      <summary>지정한 키가 있는 값을 가져오거나 설정합니다.</summary>
      <returns>지정한 키와 연결된 값입니다.지정한 키가 없는 경우 해당 키를 가져오려고 시도하면 null이 반환되고 해당 키를 설정하려고 시도하면 지정한 키를 사용하여 새 요소가 만들어집니다.</returns>
      <param name="key">가져오거나 설정할 값의 키입니다.</param>
      <exception cref="T:System.NotSupportedException">속성이 설정되어 있으며 <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용인 경우</exception>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.Keys">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션의 키가 포함된 <see cref="T:System.Collections.ICollection" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션의 키가 포함된 <see cref="T:System.Collections.ICollection" /> 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에서 지정한 키가 있는 엔트리를 제거합니다.</summary>
      <param name="key">제거할 엔트리의 키입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" />가 null인 경우</exception>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.RemoveAt(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에서 지정한 인덱스에 있는 엔트리를 제거합니다.</summary>
      <param name="index">제거할 엔트리의 0부터 시작하는 인덱스입니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션이 읽기 전용인 경우</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는<paramref name="index" />가 <see cref="P:System.Collections.Specialized.OrderedDictionary.Count" />보다 크거나 같은 경우</exception>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#IsSynchronized">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 개체에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 메서드는 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 개체에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.System#Collections#IDictionary#IsFixedSize">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" />의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>true if the <see cref="T:System.Collections.Specialized.OrderedDictionary" /> has a fixed size; otherwise, false.기본값은 false입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션을 반복하는 <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션에 대한 <see cref="T:System.Collections.IDictionaryEnumerator" /> 개체입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.OrderedDictionary.Values">
      <summary>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션의 값이 포함된 <see cref="T:System.Collections.ICollection" /> 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.OrderedDictionary" /> 컬렉션의 값이 포함된 <see cref="T:System.Collections.ICollection" /> 개체입니다.</returns>
    </member>
    <member name="T:System.Collections.Specialized.StringCollection">
      <summary>문자열 컬렉션을 나타냅니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.#ctor">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" /> 클래스의 새 인스턴스를 초기화합니다. </summary>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.Add(System.String)">
      <summary>문자열을 <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 추가합니다.</summary>
      <returns>새 요소가 삽입된 인덱스이며 0부터 시작합니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 추가할 문자열입니다.값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
      <summary>문자열 배열의 요소를 <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 복사합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 추가할 문자열의 배열입니다.배열 자체는 null일 수가 없지만 null인 요소를 포함할 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" />가 null입니다. </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.Clear">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 문자열을 모두 제거합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.Contains(System.String)">
      <summary>지정한 문자열이 <see cref="T:System.Collections.Specialized.StringCollection" />에 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value" />가 <see cref="T:System.Collections.Specialized.StringCollection" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 찾을 문자열입니다.값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)">
      <summary>대상 배열의 지정한 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.StringCollection" /> 값을 1차원 문자열 배열에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 복사된 요소의 대상인 1차원 문자열 배열입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는 소스 <see cref="T:System.Collections.Specialized.StringCollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우 </exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.StringCollection" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.Count">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />에 포함된 문자열 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" />에 포함된 문자열 수입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />을 반복하는 <see cref="T:System.Collections.Specialized.StringEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 <see cref="T:System.Collections.Specialized.StringEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
      <summary>지정한 문자열을 검색하고 <see cref="T:System.Collections.Specialized.StringCollection" /> 내에서 처음 나오는 0부터 시작하는 인덱스를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 맨 처음 나오는 <paramref name="value" />가 있으면 해당 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">찾을 문자열입니다.값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.Insert(System.Int32,System.String)">
      <summary>지정한 인덱스에 있는 <see cref="T:System.Collections.Specialized.StringCollection" />에 문자열을 삽입합니다.</summary>
      <param name="index">
        <paramref name="value" />가 삽입된 인덱스이며 0부터 시작합니다. </param>
      <param name="value">삽입할 문자열입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는 <paramref name="index" />는 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 큰 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />이 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>이 속성은 항상 false를 반환합니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.Item(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 엔트리 인덱스이며 0부터 시작합니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는 <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 크거나 같은 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 맨 처음 발견되는 특정 문자열을 제거합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 제거할 문자열입니다.값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />의 지정한 인덱스에 있는 문자열을 제거합니다.</summary>
      <param name="index">제거할 문자열의 인덱스이며 0부터 시작합니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는 <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 크거나 같은 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.SyncRoot">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>대상 배열의 지정된 인덱스에서 시작하여 전체 <see cref="T:System.Collections.Specialized.StringCollection" />을 호환되는 1차원 <see cref="T:System.Array" />에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 복사한 요소의 대상인 일차원 <see cref="T:System.Array" />입니다.<see cref="T:System.Array" />에는 0부터 시작하는 인덱스가 있어야 합니다.</param>
      <param name="index">
        <paramref name="array" />에서 복사가 시작되는 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" />가 null입니다. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우 </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" />가 다차원 배열인 경우또는 소스 <see cref="T:System.Collections.Specialized.StringCollection" />의 요소 수가 <paramref name="index" />에서 대상 <paramref name="array" /> 끝까지 사용 가능한 공간보다 큰 경우 </exception>
      <exception cref="T:System.InvalidCastException">소스 <see cref="T:System.Collections.Specialized.StringCollection" /> 형식을 대상 <paramref name="array" /> 형식으로 자동 캐스팅할 수 없는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />을 반복하는 <see cref="T:System.Collections.IEnumerator" />를 반환합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" />에 대한 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
      <summary>개체를 <see cref="T:System.Collections.Specialized.StringCollection" />의 끝 부분에 추가합니다.</summary>
      <returns>
        <paramref name="value" />가 추가된 <see cref="T:System.Collections.Specialized.StringCollection" /> 인덱스입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />의 끝에 추가할 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.StringCollection" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.Specialized.StringCollection" />의 크기가 고정되어 있는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
      <summary>요소가 <see cref="T:System.Collections.Specialized.StringCollection" />에 있는지 여부를 확인합니다.</summary>
      <returns>
        <paramref name="value" />가 <see cref="T:System.Collections.Specialized.StringCollection" />에 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 찾을 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>지정한 <see cref="T:System.Object" />를 검색하고, 전체 <see cref="T:System.Collections.Specialized.StringCollection" /> 내에서 처음 나오는 인덱스(0부터 시작)를 반환합니다.</summary>
      <returns>전체 <see cref="T:System.Collections.Specialized.StringCollection" />에서 맨 처음 나오는 <paramref name="value" />가 있으면 해당 인덱스(0부터 시작)이고, 그렇지 않으면 -1입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 찾을 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />의 지정된 인덱스에 요소를 삽입합니다.</summary>
      <param name="index">
        <paramref name="value" />를 삽입해야 하는 인덱스(0부터 시작)입니다. </param>
      <param name="value">삽입할 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는 <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 큰 경우 </exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.StringCollection" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.Specialized.StringCollection" />의 크기가 고정되어 있는 경우 </exception>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" /> 개체의 크기가 고정되어 있는지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" /> 개체의 크기가 고정되어 있으면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" /> 개체가 읽기 전용인지 여부를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringCollection" /> 개체가 읽기 전용이면 true이고, 그렇지 않으면 false입니다.기본값은 false입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)">
      <summary>지정된 인덱스에 있는 요소를 가져오거나 설정합니다.</summary>
      <returns>지정된 인덱스의 요소입니다.</returns>
      <param name="index">가져오거나 설정할 요소의 인덱스(0부터 시작)입니다. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" />가 0보다 작은 경우또는 <paramref name="index" />가 <see cref="P:System.Collections.Specialized.StringCollection.Count" />보다 크거나 같은 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 맨 처음 발견되는 특정 개체를 제거합니다.</summary>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 제거할 <see cref="T:System.Object" />입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.NotSupportedException">
        <see cref="T:System.Collections.Specialized.StringCollection" />가 읽기 전용인 경우또는 <see cref="T:System.Collections.Specialized.StringCollection" />의 크기가 고정되어 있는 경우 </exception>
    </member>
    <member name="T:System.Collections.Specialized.StringDictionary">
      <summary>개체가 아니라 문자열로 강력하게 형식화된 키와 값을 사용하여 해시 테이블을 구현합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.#ctor">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" /> 클래스의 새 인스턴스를 초기화합니다.</summary>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.Add(System.String,System.String)">
      <summary>지정한 키와 값을 가지는 엔트리를 <see cref="T:System.Collections.Specialized.StringDictionary" />에 추가합니다.</summary>
      <param name="key">추가할 엔트리의 키입니다. </param>
      <param name="value">추가할 엔트리의 값입니다.값은 null이 될 수 있습니다.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null. </exception>
      <exception cref="T:System.ArgumentException">An entry with the same key already exists in the <see cref="T:System.Collections.Specialized.StringDictionary" />. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Specialized.StringDictionary" /> is read-only. </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.Clear">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에서 모든 엔트리를 제거합니다.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Specialized.StringDictionary" /> is read-only. </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.ContainsKey(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 특정 키가 포함되어 있는지를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 지정된 키가 있는 엔트리가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="key">
        <see cref="T:System.Collections.Specialized.StringDictionary" />에서 찾을 수 있는 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">The key is null. </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.ContainsValue(System.String)">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 특정 값이 포함되어 있는지를 확인합니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 지정한 값이 있는 요소가 포함되어 있으면 true이고, 그렇지 않으면 false입니다.</returns>
      <param name="value">
        <see cref="T:System.Collections.Specialized.StringDictionary" />에서 찾을 수 있는 값입니다.값은 null이 될 수 있습니다.</param>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)">
      <summary>문자열 사전 값을 1차원 <see cref="T:System.Array" /> 인스턴스의 지정한 인덱스에 복사합니다.</summary>
      <param name="array">
        <see cref="T:System.Collections.Specialized.StringDictionary" />에서 복사된 값의 대상인 1차원 <see cref="T:System.Array" />입니다. </param>
      <param name="index">복사를 시작할 배열의 인덱스입니다. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the <see cref="T:System.Collections.Specialized.StringDictionary" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than the lower bound of <paramref name="array" />. </exception>
    </member>
    <member name="P:System.Collections.Specialized.StringDictionary.Count">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 키/값 쌍의 수를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 키/값 쌍의 수입니다.이 속성 값을 검색하는 것은 O(1) 연산입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.GetEnumerator">
      <summary>문자열 사전을 반복하는 열거자를 반환합니다.</summary>
      <returns>문자열 사전을 반복하는 <see cref="T:System.Collections.IEnumerator" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.StringDictionary.IsSynchronized">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되는지를 나타내는 값을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 대한 액세스가 동기화되어 스레드로부터 안전하게 보호되면 true이고, 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.StringDictionary.Item(System.String)">
      <summary>지정된 키에 연결된 값을 가져오거나 설정합니다.</summary>
      <returns>지정한 키와 연결된 값입니다.지정한 키가 없을 때 Get을 사용하면 null이 반환되고 Set을 사용하면 지정한 키의 새 엔트리가 만들어집니다.</returns>
      <param name="key">가져오거나 설정할 값이 있는 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> is null.</exception>
    </member>
    <member name="P:System.Collections.Specialized.StringDictionary.Keys">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 키의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" />의 키를 제공하는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="M:System.Collections.Specialized.StringDictionary.Remove(System.String)">
      <summary>문자열 사전에서 지정한 키를 가지는 엔트리를 제거합니다.</summary>
      <param name="key">제거할 엔트리의 키입니다. </param>
      <exception cref="T:System.ArgumentNullException">The key is null. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Specialized.StringDictionary" /> is read-only. </exception>
    </member>
    <member name="P:System.Collections.Specialized.StringDictionary.SyncRoot">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 대한 액세스를 동기화하는 데 사용할 수 있는 개체를 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 대한 액세스를 동기화하는 데 사용할 수 있는 <see cref="T:System.Object" />입니다.</returns>
    </member>
    <member name="P:System.Collections.Specialized.StringDictionary.Values">
      <summary>
        <see cref="T:System.Collections.Specialized.StringDictionary" />에 있는 값의 컬렉션을 가져옵니다.</summary>
      <returns>
        <see cref="T:System.Collections.Specialized.StringDictionary" />의 값을 제공하는 <see cref="T:System.Collections.ICollection" />입니다.</returns>
    </member>
    <member name="T:System.Collections.Specialized.StringEnumerator">
      <summary>
        <see cref="T:System.Collections.Specialized.StringCollection" />에서 단순하게 반복할 수 있도록 지원합니다.</summary>
    </member>
    <member name="P:System.Collections.Specialized.StringEnumerator.Current">
      <summary>컬렉션의 현재 요소를 가져옵니다.</summary>
      <returns>컬렉션의 현재 요소입니다.</returns>
      <exception cref="T:System.InvalidOperationException">열거자가 컬렉션의 첫 번째 요소 앞 또는 마지막 요소 뒤에 배치되는 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringEnumerator.MoveNext">
      <summary>열거자를 컬렉션의 다음 요소로 이동합니다.</summary>
      <returns>열거자가 다음 요소로 이동한 경우 true가 반환되고, 컬렉션의 끝을 지난 경우 false가 반환됩니다.</returns>
      <exception cref="T:System.InvalidOperationException">열거자가 만들어진 후 컬렉션이 수정된 경우 </exception>
    </member>
    <member name="M:System.Collections.Specialized.StringEnumerator.Reset">
      <summary>컬렉션의 첫 번째 요소 앞의 초기 위치에 열거자를 설정합니다.</summary>
      <exception cref="T:System.InvalidOperationException">열거자가 만들어진 후 컬렉션이 수정된 경우 </exception>
    </member>
  </members>
</doc>